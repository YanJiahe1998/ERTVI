[ERT]
# input for ERT2d code
basepath = /home/yan/ERTVI
# the number of the threads you would like to use, must be the divisor of the number of particles. Also have to be the same as n_threads in main.cpp
# For example, for 800 particles, you can use 2, 4, 5, 8, 10, ... , 200, 400, 800
nparallel = 20
# the number of observed data
nobs = 905
# other arguments for ERT2d code
nelement = 6630
# filename of the ERT observed data
obsfilename = data5noise.txt
# weights
a = 0.000
b = 0.05
# target RMS
targetRMS = 1.0
# scaling factor
# the particle update will be very large if you use a small weight b (e.g. 0.002), then the process will be unstable.
# The scaling factor is used to improve the data weight and reduces the target RMS
# for example, for 0.2% noise, you should set b = 0.002, scaling factor is set to be 10 to use the virtual weight b = 0.02,
# the target RMS will be reduced to 0.1 in the program (but you still should set the target RMS = 1.0)
scalingfactor = 1.0

[svgd]
# svgd or ssvgd is supported
method = svgd
# kernel function, only rbf or diagonal supported
kernel = diagonal
# grad, var, ...
diag = grad
# optimizer, sgd, adam
optimizer = adam
# using transform (true) or not (false)
transform = false
# prior type, 'Uniform' or 'Gaussian'
priortype = Uniform
# number of particles
nparticles = 800
# number of iterations
iter = 600
# burn_in period, only used for ssvgd
burn_in = 200
# thining of the chain, only used for ssvgd
thin = 2
# step length for svgd and ssvgd
stepsize = 0.02
# decay the stepsize exponentially, the final stepsize will be stepsize*final_decay
final_decay = 1
# input directory
inputpath = ${ERT:basepath}/input
# output directory
outpath = ${ERT:basepath}/results
# file that contains hyperparameters for prior pdf
prior = Uniform_prior.txt
# file that contains the init model of the prior
init = Uniform_prior.txt
# seeds of the random
seeds = 43
